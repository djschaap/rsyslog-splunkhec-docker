# rsyslog.conf

# NOTE: config.enabled broken for most uses, 8.33.1 - 8.1603+
#   per https://github.com/rsyslog/rsyslog/issues/2520

$FileOwner rsyslog
$FileGroup rsyslog
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022
#$PrivDropToUser rsyslog
#$PrivDropToGroup rsyslog

$AbortOnUncleanConfig on
$RepeatedMsgReduction on
$WorkDirectory /work

global(processInternalMessages="on")
global (
  parser.escapeControlCharactersOnReceive="on"

  # https://github.com/rsyslog/rsyslog/issues/552
  parser.escapeControlCharacterTab="off"
)

module(load="immark")
#module(load="imtcp" StreamDriver.AuthMode="anon" StreamDriver.Mode="1")
# TODO allow disabling impstats after issue 2520 is resolved
#   (see comment near top of this file)
module(load="impstats") # config.enabled=`echo $ENABLE_STATISTICS`)
#module(load="imrelp")
#module(load="imptcp")
module(load="imudp" TimeRequery="500")

module(load="omstdout")

module(load="mmjsonparse")
module(load="mmnormalize")
module(load="mmutf8fix")

module(load="omprog") # needed for omsplunkhec

#input(type="imptcp" port="5141")
input(type="imudp" port="5140" ruleset="noc_syslog")
input(type="imudp" port="5141" ruleset="noc_syslog")
input(type="imudp" port="5142" ruleset="noc_trap")
input(type="imudp" port="5143" ruleset="noc_syslog")
#input(type="imrelp" port="1601")

include(file="/config/rsyslog.d/*.conf" mode="optional")

# I'd use option.jsonf if it could handle the nested "event" structure
template(name="json_to_splunk_hec" type="list") {
  constant(value="{")
  property(outname="time" name="timegenerated" dateFormat="unixtimestamp" format="jsonf")
  constant(value=",")
  property(outname="host" name="$.outer_host" format="jsonf") # source IP, from fromhost-ip
  constant(value=",")
  property(outname="index" name="$.index" format="jsonf")
  constant(value=",")
  property(outname="source" name="$.source" format="jsonf")
  constant(value=",")
  property(outname="sourcetype" name="$.sourcetype" format="jsonf")
  constant(value=",\"event\":")
  property(name="$.event") # no format="jsonf" to avoid double-escape
  constant(value="}\n")
}

# default ruleset

syslog.* :omstdout:

#include(file="/config/droprules.conf" mode="optional")  # this permits the user to easily drop unwanted messages

action(name="main_utf8fix" type="mmutf8fix" replacementChar="?")

#action(type="omfile" file="/logs/ruleset-default" template="RSYSLOG_FileFormat" config.enabled=`echo $ENABLE_LOGFILES`)

# noc_syslog ruleset

ruleset(name="noc_syslog") {
  set $.index = "c" & `echo $CUSTOMER_ID` & "-main";
  set $.outer_host = $fromhost-ip;
  set $.source = "hec:syslog:" & $$myhostname;

  set $.event!customer_id = `echo $CUSTOMER_ID`;
  set $.event!inner_host = $hostname;
  set $.event!severity = $syslogseverity;
  set $.event!facility = $syslogfacility-text;
  set $.event!syslog-tag = $syslogtag;
  set $.event!app-name = $app-name;
  set $.event!message = $msg;
  set $.event!raw_message = $rawmsg-after-pri; # DEBUG

  action(type="mmnormalize"
    rulebase="/config/syslog.rulebase"
    userawmsg="on"
  )

  if $programname == "tvcs" then {
    set $.sourcetype = "sen-noc:tms-garbage";
  }
  else {
    set $.sourcetype = "sen-noc:syslog";
  }

  # TODO collapse these includes after issue 2520 is resolved
  #   (see comment near top of this file)
  include(
    file="/config/file-noc_syslog.conf"
    #config.enabled=`echo $ENABLE_LOG_FILES`
  )

  include(
    file="/config/debug-noc_syslog.conf"
    config.enabled=`echo $ENABLE_LOG_DEBUG`
  )

  include(
    file="/config/splunk-hec.conf"
    config.enabled=`echo $ENABLE_HEC`
  )
}

# noc_trap ruleset

ruleset(name="noc_trap") {
  set $.index = "c" & `echo $CUSTOMER_ID` & "-main";
  set $.outer_host = $.trap_src_ip;
  set $.source = "hec:trap:" & $$myhostname;
  set $.sourcetype = "sen-noc:trap";

  set $.event!customer_id = `echo $CUSTOMER_ID`;
  #set $.event!inner_host = $hostname;
  #set $.event!severity = $syslogseverity;
  #set $.event!facility = $syslogfacility-text;
  set $.event!syslog-tag = $syslogtag; # UNSURE if useful
  set $.event!app-name = $app-name; # UNSURE if useful - snmptrapd?
  set $.event!message = $msg;
  set $.event!raw_message = $rawmsg-after-pri; # UNSURE if useful
  # TODO include fields from trap.rulebase

  action(type="mmnormalize"
    rulebase="/config/trap.rulebase"
    userawmsg="on"
  )

  # TODO collapse these includes after issue 2520 is resolved
  include(
    file="/config/file-noc_trap.conf"
    config.enabled=`echo $ENABLE_LOG_FILES`
  )

  include(
    file="/config/debug-noc_syslog.conf"
    config.enabled=`echo $ENABLE_LOG_DEBUG`
  )

  include(
    file="/config/splunk-hec.conf"
    config.enabled=`echo $ENABLE_HEC`
  )
}

#include(text=`echo $CNF_CALL_LOG_TO_LOGFILES`)
#include(text=`echo $CNF_CALL_LOG_TO_LOGSENE`)
